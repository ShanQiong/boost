<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structboost_1_1geometry_1_1range_1_1detail_1_1is__range__impl" kind="struct" language="C++" prot="public">
    <compoundname>boost::geometry::range::detail::is_range_impl</compoundname>
    <basecompoundref refid="structboost_1_1geometry_1_1range_1_1detail_1_1is__iterator" prot="public" virt="non-virtual">boost::geometry::range::detail::is_iterator&lt; boost::range_iterator&lt; T &gt;::type &gt;</basecompoundref>
    <includes local="no">range.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>HasIterator</declname>
        <defname>HasIterator</defname>
        <defval>boost::has_range_iterator&lt;T&gt;::value</defval>
      </param>
    </templateparamlist>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="944">
        <label>std::integral_constant&lt; bool, has_iterator_category&lt; std::iterator_traits&lt; boost::range_iterator&lt; T &gt;::type  &gt; &gt;::value &gt;</label>
      </node>
      <node id="943">
        <label>boost::geometry::range::detail::is_iterator&lt; boost::range_iterator&lt; T &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1range_1_1detail_1_1is__iterator"/>
        <childnode refid="944" relation="public-inheritance">
        </childnode>
      </node>
      <node id="942">
        <label>boost::geometry::range::detail::is_range_impl&lt; T, HasIterator &gt;</label>
        <link refid="structboost_1_1geometry_1_1range_1_1detail_1_1is__range__impl"/>
        <childnode refid="943" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="947">
        <label>std::integral_constant&lt; bool, has_iterator_category&lt; std::iterator_traits&lt; boost::range_iterator&lt; T &gt;::type  &gt; &gt;::value &gt;</label>
      </node>
      <node id="946">
        <label>boost::geometry::range::detail::is_iterator&lt; boost::range_iterator&lt; T &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1range_1_1detail_1_1is__iterator"/>
        <childnode refid="947" relation="public-inheritance">
        </childnode>
      </node>
      <node id="945">
        <label>boost::geometry::range::detail::is_range_impl&lt; T, HasIterator &gt;</label>
        <link refid="structboost_1_1geometry_1_1range_1_1detail_1_1is__range__impl"/>
        <childnode refid="946" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/range.hpp" line="64" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/range.hpp" bodystart="59" bodyend="64"/>
    <listofallmembers>
    </listofallmembers>
  </compounddef>
</doxygen>

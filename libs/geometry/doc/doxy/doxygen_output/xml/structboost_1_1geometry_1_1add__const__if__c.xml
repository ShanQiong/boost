<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structboost_1_1geometry_1_1add__const__if__c" kind="struct" language="C++" prot="public">
    <compoundname>boost::geometry::add_const_if_c</compoundname>
    <includes local="no">type_traits_std.hpp</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>IsConst</declname>
        <defname>IsConst</defname>
      </param>
      <param>
        <type>typename Type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1add__const__if__c_1a2cbd56d410bd47f2fa61486c0495c82f" prot="public" static="no">
        <type>std::conditional_t&lt; IsConst, Type const, Type &gt;</type>
        <definition>typedef std::conditional_t&lt; IsConst, Type const, Type &gt; boost::geometry::add_const_if_c&lt; IsConst, Type &gt;::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="205" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Meta-function to define a const or non const type. </para>    </briefdescription>
    <detaileddescription>
<para>If the boolean template parameter is true, the type parameter will be defined as const, otherwise it will be defined as it was. This meta-function is used to have one implementation for both const and non const references <simplesect kind="note"><para>This traits class is completely independant from Boost.Geometry and might be a separate addition to Boost </para></simplesect>
<simplesect kind="note"><para>Used in a.o. for_each, interior_rings, exterior_ring </para></simplesect>
<simplesect kind="par"><title>Example</title><para><programlisting><codeline><highlight class="normal">void<sp/>foo(typename<sp/>add_const_if_c&lt;IsConst,<sp/>Point&gt;::type&amp;<sp/>point)</highlight></codeline>
</programlisting> </para></simplesect>
</para>    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="199" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="198" bodyend="206"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1add__const__if__c_1a2cbd56d410bd47f2fa61486c0495c82f" prot="public" virt="non-virtual"><scope>boost::geometry::add_const_if_c</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine" kind="class" language="C++" prot="public">
    <compoundname>boost::geometry::strategy::distance::comparable::haversine</compoundname>
    <includes local="no">distance_haversine.hpp</includes>
    <innerclass refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1_1calculation__type" prot="public">boost::geometry::strategy::distance::comparable::haversine::calculation_type</innerclass>
    <templateparamlist>
      <param>
        <type>typename RadiusTypeOrSphere</type>
        <defval>double</defval>
      </param>
      <param>
        <type>typename CalculationType</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aa281671dd977755eb17a68945d9b6e1a" prot="public" static="no">
        <type>strategy_detail::get_radius&lt; RadiusTypeOrSphere &gt;::type</type>
        <definition>typedef strategy_detail::get_radius&lt; RadiusTypeOrSphere &gt;::type boost::geometry::strategy::distance::comparable::haversine&lt; RadiusTypeOrSphere, CalculationType &gt;::radius_type</definition>
        <argsstring></argsstring>
        <name>radius_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" line="73" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a57f38139a99fe385bb9a38f583af12a4" prot="private" static="no" mutable="no">
        <type><ref refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aa281671dd977755eb17a68945d9b6e1a" kindref="member">radius_type</ref></type>
        <definition>radius_type boost::geometry::strategy::distance::comparable::haversine&lt; RadiusTypeOrSphere, CalculationType &gt;::m_radius</definition>
        <argsstring></argsstring>
        <name>m_radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" line="112" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="112" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a71a90a2db4813f42cb9e1334a9a3f51b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::strategy::distance::comparable::haversine&lt; RadiusTypeOrSphere, CalculationType &gt;::haversine</definition>
        <argsstring>()</argsstring>
        <name>haversine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" line="75" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="75" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a15bb98f3a0018eb489aee20ca7da12be" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename RadiusOrSphere</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>boost::geometry::strategy::distance::comparable::haversine&lt; RadiusTypeOrSphere, CalculationType &gt;::haversine</definition>
        <argsstring>(RadiusOrSphere const &amp;radius_or_sphere)</argsstring>
        <name>haversine</name>
        <param>
          <type>RadiusOrSphere const &amp;</type>
          <declname>radius_or_sphere</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" line="80" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aac98832f86aa11b46290052dca3a51ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aa281671dd977755eb17a68945d9b6e1a" kindref="member">radius_type</ref></type>
        <definition>radius_type boost::geometry::strategy::distance::comparable::haversine&lt; RadiusTypeOrSphere, CalculationType &gt;::radius</definition>
        <argsstring>() const</argsstring>
        <name>radius</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" line="97" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="97" bodyend="100"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aaded80fc41577df23707ff5e1649c648" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point1</type>
          </param>
          <param>
            <type>typename Point2</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1_1calculation__type" kindref="compound">calculation_type</ref>&lt; Point1, Point2 &gt;::type</type>
        <definition>static calculation_type&lt;Point1, Point2&gt;::type boost::geometry::strategy::distance::comparable::haversine&lt; RadiusTypeOrSphere, CalculationType &gt;::apply</definition>
        <argsstring>(Point1 const &amp;p1, Point2 const &amp;p2)</argsstring>
        <name>apply</name>
        <param>
          <type>Point1 const &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>Point2 const &amp;</type>
          <declname>p2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" line="89" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="89" bodyend="95"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aec5774180e24d90a9677e87de38c0cd2" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename R</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>R</type>
        <definition>static R boost::geometry::strategy::distance::comparable::haversine&lt; RadiusTypeOrSphere, CalculationType &gt;::calculate</definition>
        <argsstring>(T1 const &amp;lon1, T1 const &amp;lat1, T2 const &amp;lon2, T2 const &amp;lat2)</argsstring>
        <name>calculate</name>
        <param>
          <type>T1 const &amp;</type>
          <declname>lon1</declname>
        </param>
        <param>
          <type>T1 const &amp;</type>
          <declname>lat1</declname>
        </param>
        <param>
          <type>T2 const &amp;</type>
          <declname>lon2</declname>
        </param>
        <param>
          <type>T2 const &amp;</type>
          <declname>lat2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" line="105" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="105" bodyend="110"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" line="55" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/spherical/distance_haversine.hpp" bodystart="54" bodyend="113"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aaded80fc41577df23707ff5e1649c648" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>apply</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aec5774180e24d90a9677e87de38c0cd2" prot="private" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>calculate</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a71a90a2db4813f42cb9e1334a9a3f51b" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>haversine</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a15bb98f3a0018eb489aee20ca7da12be" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>haversine</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1a57f38139a99fe385bb9a38f583af12a4" prot="private" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>m_radius</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aac98832f86aa11b46290052dca3a51ad" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>radius</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1distance_1_1comparable_1_1haversine_1aa281671dd977755eb17a68945d9b6e1a" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::distance::comparable::haversine</scope><name>radius_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

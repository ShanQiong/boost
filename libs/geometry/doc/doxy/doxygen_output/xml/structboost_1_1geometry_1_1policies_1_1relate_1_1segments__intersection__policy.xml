<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy" kind="struct" language="C++" prot="public">
    <compoundname>boost::geometry::policies::relate::segments_intersection_policy</compoundname>
    <includes local="no">intersection_policy.hpp</includes>
    <innerclass refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1_1return__type" prot="public">boost::geometry::policies::relate::segments_intersection_policy::return_type</innerclass>
    <templateparamlist>
      <param>
        <type>typename IntersectionPointsReturnType</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1acd7796219fe5b4194e9479750f8108ee" prot="private" static="no">
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__direction" kindref="compound">policies::relate::segments_direction</ref></type>
        <definition>typedef policies::relate::segments_direction boost::geometry::policies::relate::segments_intersection_policy&lt; IntersectionPointsReturnType &gt;::dir_policy</definition>
        <argsstring></argsstring>
        <name>dir_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" line="40" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1a3c03a5c3d45ea437faaef753f7663ffe" prot="private" static="no">
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__points" kindref="compound">policies::relate::segments_intersection_points</ref>&lt; IntersectionPointsReturnType &gt;</type>
        <definition>typedef policies::relate::segments_intersection_points&lt; IntersectionPointsReturnType &gt; boost::geometry::policies::relate::segments_intersection_policy&lt; IntersectionPointsReturnType &gt;::pts_policy</definition>
        <argsstring></argsstring>
        <name>pts_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" line="39" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1ad2bda89e49b9a0b0e9fd0ccb05269914" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Segment</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1_1return__type" kindref="compound">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_policy&lt; IntersectionPointsReturnType &gt;::degenerate</definition>
        <argsstring>(Segment const &amp;segment, bool a_degenerate)</argsstring>
        <name>degenerate</name>
        <param>
          <type>Segment const &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_degenerate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" line="93" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" bodystart="93" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1adca2fabc40ca0dab2c0d9f589d782050" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1_1return__type" kindref="compound">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_policy&lt; IntersectionPointsReturnType &gt;::disjoint</definition>
        <argsstring>()</argsstring>
        <name>disjoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" line="115" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" bodystart="115" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1acfbe0d625ad06397cea132bbb85eecb0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1_1return__type" kindref="compound">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_policy&lt; IntersectionPointsReturnType &gt;::error</definition>
        <argsstring>(std::string const &amp;msg)</argsstring>
        <name>error</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" line="124" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" bodystart="124" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1a28603aba4582ece4869d910db449623b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Segment</type>
          </param>
          <param>
            <type>typename Ratio</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1_1return__type" kindref="compound">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_policy&lt; IntersectionPointsReturnType &gt;::one_degenerate</definition>
        <argsstring>(Segment const &amp;segment, Ratio const &amp;ratio, bool a_degenerate)</argsstring>
        <name>one_degenerate</name>
        <param>
          <type>Segment const &amp;</type>
          <declname>segment</declname>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>ratio</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>a_degenerate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" line="104" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" bodystart="104" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1a385489f9ef0b713482112c7f8719ac09" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Segment1</type>
          </param>
          <param>
            <type>typename Segment2</type>
          </param>
          <param>
            <type>typename Ratio</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1_1return__type" kindref="compound">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_policy&lt; IntersectionPointsReturnType &gt;::segments_collinear</definition>
        <argsstring>(Segment1 const &amp;segment1, Segment2 const &amp;segment2, bool opposite, int pa1, int pa2, int pb1, int pb2, Ratio const &amp;ra1, Ratio const &amp;ra2, Ratio const &amp;rb1, Ratio const &amp;rb2)</argsstring>
        <name>segments_collinear</name>
        <param>
          <type>Segment1 const &amp;</type>
          <declname>segment1</declname>
        </param>
        <param>
          <type>Segment2 const &amp;</type>
          <declname>segment2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>opposite</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pa1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pa2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pb1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pb2</declname>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>ra1</declname>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>ra2</declname>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>rb1</declname>
        </param>
        <param>
          <type>Ratio const &amp;</type>
          <declname>rb2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" line="71" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" bodystart="71" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1a0216192f88d16f79d1f89f268a891c6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Segment1</type>
          </param>
          <param>
            <type>typename Segment2</type>
          </param>
          <param>
            <type>typename SegmentIntersectionInfo</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1_1return__type" kindref="compound">return_type</ref></type>
        <definition>static return_type boost::geometry::policies::relate::segments_intersection_policy&lt; IntersectionPointsReturnType &gt;::segments_crosses</definition>
        <argsstring>(side_info const &amp;sides, SegmentIntersectionInfo const &amp;sinfo, Segment1 const &amp;s1, Segment2 const &amp;s2)</argsstring>
        <name>segments_crosses</name>
        <param>
          <type><ref refid="classboost_1_1geometry_1_1side__info" kindref="compound">side_info</ref> const &amp;</type>
          <declname>sides</declname>
        </param>
        <param>
          <type>SegmentIntersectionInfo const &amp;</type>
          <declname>sinfo</declname>
        </param>
        <param>
          <type>Segment1 const &amp;</type>
          <declname>s1</declname>
        </param>
        <param>
          <type>Segment2 const &amp;</type>
          <declname>s2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" line="59" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" bodystart="59" bodyend="68"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" line="34" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/relate/intersection_policy.hpp" bodystart="33" bodyend="132"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1ad2bda89e49b9a0b0e9fd0ccb05269914" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_policy</scope><name>degenerate</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1acd7796219fe5b4194e9479750f8108ee" prot="private" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_policy</scope><name>dir_policy</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1adca2fabc40ca0dab2c0d9f589d782050" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_policy</scope><name>disjoint</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1acfbe0d625ad06397cea132bbb85eecb0" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_policy</scope><name>error</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1a28603aba4582ece4869d910db449623b" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_policy</scope><name>one_degenerate</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1a3c03a5c3d45ea437faaef753f7663ffe" prot="private" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_policy</scope><name>pts_policy</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1a385489f9ef0b713482112c7f8719ac09" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_policy</scope><name>segments_collinear</name></member>
      <member refid="structboost_1_1geometry_1_1policies_1_1relate_1_1segments__intersection__policy_1a0216192f88d16f79d1f89f268a891c6d" prot="public" virt="non-virtual"><scope>boost::geometry::policies::relate::segments_intersection_policy</scope><name>segments_crosses</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

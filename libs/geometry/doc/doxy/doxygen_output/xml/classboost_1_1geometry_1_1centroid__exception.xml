<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classboost_1_1geometry_1_1centroid__exception" kind="class" language="C++" prot="public">
    <compoundname>boost::geometry::centroid_exception</compoundname>
    <basecompoundref refid="classboost_1_1geometry_1_1exception" prot="public" virt="non-virtual">boost::geometry::exception</basecompoundref>
    <includes local="no">centroid.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1centroid__exception_1aa7f89d82571adc93bd774789cb3bfacf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::centroid_exception::centroid_exception</definition>
        <argsstring>()</argsstring>
        <name>centroid_exception</name>
        <briefdescription>
<para>The default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/centroid.hpp" line="94" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/centroid.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1centroid__exception_1ab9c5caeec6055c0b8dd5f8086771d49b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>char const  *</type>
        <definition>virtual char const* boost::geometry::centroid_exception::what</definition>
        <argsstring>() const</argsstring>
        <name>what</name>
        <reimplements refid="classboost_1_1geometry_1_1exception_1a20b8de7e5200fba44f60e45345377113">what</reimplements>
        <exceptions> throw ()</exceptions>
        <briefdescription>
<para>Returns the explanatory string. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to a null-terminated string with explanatory information. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/centroid.hpp" line="100" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/centroid.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Centroid Exception. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classboost_1_1geometry_1_1centroid__exception" kindref="compound">centroid_exception</ref> is thrown if the free centroid function is called with geometries for which the centroid cannot be calculated. For example: a linestring without points, a polygon without points, an empty multi-geometry.  <qbk>
[heading See also]
\* [link geometry.reference.algorithms.centroid the centroid function]
</qbk>  </para>    </detaileddescription>
    <inheritancegraph>
      <node id="30">
        <label>boost::geometry::exception</label>
        <link refid="classboost_1_1geometry_1_1exception"/>
        <childnode refid="31" relation="public-inheritance">
        </childnode>
      </node>
      <node id="29">
        <label>boost::geometry::centroid_exception</label>
        <link refid="classboost_1_1geometry_1_1centroid__exception"/>
        <childnode refid="30" relation="public-inheritance">
        </childnode>
      </node>
      <node id="31">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="33">
        <label>boost::geometry::exception</label>
        <link refid="classboost_1_1geometry_1_1exception"/>
        <childnode refid="34" relation="public-inheritance">
        </childnode>
      </node>
      <node id="32">
        <label>boost::geometry::centroid_exception</label>
        <link refid="classboost_1_1geometry_1_1centroid__exception"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="34">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/centroid.hpp" line="88" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/centroid.hpp" bodystart="87" bodyend="104"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1centroid__exception_1aa7f89d82571adc93bd774789cb3bfacf" prot="public" virt="non-virtual"><scope>boost::geometry::centroid_exception</scope><name>centroid_exception</name></member>
      <member refid="classboost_1_1geometry_1_1centroid__exception_1ab9c5caeec6055c0b8dd5f8086771d49b" prot="public" virt="virtual"><scope>boost::geometry::centroid_exception</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

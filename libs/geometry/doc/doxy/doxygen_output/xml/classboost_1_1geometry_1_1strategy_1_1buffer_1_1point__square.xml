<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classboost_1_1geometry_1_1strategy_1_1buffer_1_1point__square" kind="class" language="C++" prot="public">
    <compoundname>boost::geometry::strategy::buffer::point_square</compoundname>
    <includes local="no">buffer_point_square.hpp</includes>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1buffer_1_1point__square_1afb03dfd6b620d7651369a3a3bcdf8a8f" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename DistanceType</type>
          </param>
          <param>
            <type>typename MultiplierType</type>
          </param>
          <param>
            <type>typename OutputRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::strategy::buffer::point_square::add_point</definition>
        <argsstring>(Point const &amp;point, DistanceType const &amp;distance, MultiplierType const &amp;x, MultiplierType const &amp;y, OutputRange &amp;output_range) const</argsstring>
        <name>add_point</name>
        <param>
          <type>Point const &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>DistanceType const &amp;</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>MultiplierType const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>MultiplierType const &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>OutputRange &amp;</type>
          <declname>output_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/cartesian/buffer_point_square.hpp" line="60" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/cartesian/buffer_point_square.hpp" bodystart="60" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1buffer_1_1point__square_1acdcd58cbae3cf85c4aff13b2e66d1b6a" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename DistanceType</type>
          </param>
          <param>
            <type>typename OutputRange</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::strategy::buffer::point_square::add_points</definition>
        <argsstring>(Point const &amp;point, DistanceType const &amp;distance, OutputRange &amp;output_range) const</argsstring>
        <name>add_points</name>
        <param>
          <type>Point const &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>DistanceType const &amp;</type>
          <declname>distance</declname>
        </param>
        <param>
          <type>OutputRange &amp;</type>
          <declname>output_range</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/cartesian/buffer_point_square.hpp" line="78" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/cartesian/buffer_point_square.hpp" bodystart="78" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Create a squared form buffer around a point. </para>    </briefdescription>
    <detaileddescription>
<para>This strategy can be used as PointStrategy for the buffer algorithm. It creates a square from each point, where the point lies in the center. It can be applied for points and multi_points, but also for a linestring (if it is degenerate, so consisting of only one point) and for polygons (if it is degenerate). This strategy is only applicable for Cartesian coordinate systems.</para><para> <qbk>
[heading Example]
[buffer_point_square]
[heading Output]
[$img/strategies/buffer_point_square.png]
[heading See also]
\* [link geometry.reference.algorithms.buffer.buffer_7_with_strategies buffer (with strategies)]
\* [link geometry.reference.strategies.strategy_buffer_point_circle point_circle]
\* [link geometry.reference.strategies.strategy_buffer_geographic_point_circle geographic_point_circle]
</qbk>  </para>    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/cartesian/buffer_point_square.hpp" line="52" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/cartesian/buffer_point_square.hpp" bodystart="51" bodyend="110"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1strategy_1_1buffer_1_1point__square_1afb03dfd6b620d7651369a3a3bcdf8a8f" prot="private" virt="non-virtual"><scope>boost::geometry::strategy::buffer::point_square</scope><name>add_point</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1buffer_1_1point__square_1acdcd58cbae3cf85c4aff13b2e66d1b6a" prot="private" virt="non-virtual"><scope>boost::geometry::strategy::buffer::point_square</scope><name>add_points</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

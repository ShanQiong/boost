<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classboost_1_1geometry_1_1strategy_1_1area_1_1cartesian" kind="class" language="C++" prot="public">
    <compoundname>boost::geometry::strategy::area::cartesian</compoundname>
    <derivedcompoundref refid="structboost_1_1geometry_1_1strategy_1_1point__order_1_1cartesian" prot="public" virt="non-virtual">boost::geometry::strategy::point_order::cartesian&lt; CalculationType &gt;</derivedcompoundref>
    <includes local="no">area.hpp</includes>
    <innerclass refid="structboost_1_1geometry_1_1strategy_1_1area_1_1cartesian_1_1result__type" prot="public">boost::geometry::strategy::area::cartesian::result_type</innerclass>
    <innerclass refid="classboost_1_1geometry_1_1strategy_1_1area_1_1cartesian_1_1state" prot="public">boost::geometry::strategy::area::cartesian::state</innerclass>
    <templateparamlist>
      <param>
        <type>typename CalculationType</type>
        <defval>void</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1area_1_1cartesian_1aa954898c4633c0042d704865f86ae103" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename PointOfSegment</type>
          </param>
          <param>
            <type>typename Geometry</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void boost::geometry::strategy::area::cartesian&lt; CalculationType &gt;::apply</definition>
        <argsstring>(PointOfSegment const &amp;p1, PointOfSegment const &amp;p2, state&lt; Geometry &gt; &amp;st)</argsstring>
        <name>apply</name>
        <param>
          <type>PointOfSegment const &amp;</type>
          <declname>p1</declname>
        </param>
        <param>
          <type>PointOfSegment const &amp;</type>
          <declname>p2</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1geometry_1_1strategy_1_1area_1_1cartesian_1_1state" kindref="compound">state</ref>&lt; Geometry &gt; &amp;</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/area.hpp" line="92" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/area.hpp" bodystart="92" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1area_1_1cartesian_1a150dd5ad41793fe59f4e48ffd09af20b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>static auto boost::geometry::strategy::area::cartesian&lt; CalculationType &gt;::result</definition>
        <argsstring>(state&lt; Geometry &gt; &amp;st)</argsstring>
        <name>result</name>
        <param>
          <type><ref refid="classboost_1_1geometry_1_1strategy_1_1area_1_1cartesian_1_1state" kindref="compound">state</ref>&lt; Geometry &gt; &amp;</type>
          <declname>st</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/area.hpp" line="115" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/area.hpp" bodystart="115" bodyend="118"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Cartesian area calculation. </para>    </briefdescription>
    <detaileddescription>
<para>Calculates cartesian area using the trapezoidal rule <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>CalculationType</parametername>
</parameternamelist>
<parameterdescription>
<para>numeric type for calculation (e.g. high precision); if [*void] then it is extracted automatically from the coordinate type and (if necessary) promoted to floating point</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk>
[heading See also]
[link geometry.reference.algorithms.area.area_2_with_strategy area (with strategy)]
</qbk>  </para>    </detaileddescription>
    <inheritancegraph>
      <node id="1859">
        <label>boost::geometry::strategy::area::cartesian&lt; CalculationType &gt;</label>
        <link refid="classboost_1_1geometry_1_1strategy_1_1area_1_1cartesian"/>
      </node>
      <node id="1860">
        <label>boost::geometry::strategy::point_order::cartesian&lt; CalculationType &gt;</label>
        <link refid="structboost_1_1geometry_1_1strategy_1_1point__order_1_1cartesian"/>
        <childnode refid="1859" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/area.hpp" line="55" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/area.hpp" bodystart="54" bodyend="120"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1strategy_1_1area_1_1cartesian_1aa954898c4633c0042d704865f86ae103" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::area::cartesian</scope><name>apply</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1area_1_1cartesian_1a150dd5ad41793fe59f4e48ffd09af20b" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::area::cartesian</scope><name>result</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structboost_1_1geometry_1_1less_3_01void_00_01_dimension_00_01void_01_4" kind="struct" language="C++" prot="public">
    <compoundname>boost::geometry::less&lt; void, Dimension, void &gt;</compoundname>
    <includes local="no">compare.hpp</includes>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>Dimension</declname>
        <defname>Dimension</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1less_3_01void_00_01_dimension_00_01void_01_4_1a9105130d3e0ea3cb38493a91df3b7db1" prot="public" static="no">
        <type>bool</type>
        <definition>typedef bool boost::geometry::less&lt; void, Dimension, void &gt;::result_type</definition>
        <argsstring></argsstring>
        <name>result_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/compare.hpp" line="108" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/compare.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1less_3_01void_00_01_dimension_00_01void_01_4_1ab276e93c5946ddb41a1f7c63b0f49d86" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point1</type>
          </param>
          <param>
            <type>typename Point2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::less&lt; void, Dimension, void &gt;::operator()</definition>
        <argsstring>(Point1 const &amp;left, Point2 const &amp;right) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Point1 const &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>Point2 const &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/compare.hpp" line="111" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/compare.hpp" bodystart="111" bodyend="121"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/compare.hpp" line="107" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/policies/compare.hpp" bodystart="106" bodyend="122"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1less_3_01void_00_01_dimension_00_01void_01_4_1ab276e93c5946ddb41a1f7c63b0f49d86" prot="public" virt="non-virtual"><scope>boost::geometry::less&lt; void, Dimension, void &gt;</scope><name>operator()</name></member>
      <member refid="structboost_1_1geometry_1_1less_3_01void_00_01_dimension_00_01void_01_4_1a9105130d3e0ea3cb38493a91df3b7db1" prot="public" virt="non-virtual"><scope>boost::geometry::less&lt; void, Dimension, void &gt;</scope><name>result_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceboost_1_1geometry_1_1util" kind="namespace" language="C++">
    <compoundname>boost::geometry::util</compoundname>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1combine__if" prot="public">boost::geometry::util::combine_if</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1conjunction" prot="public">boost::geometry::util::conjunction</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1conjunction_3_01_trait_01_4" prot="public">boost::geometry::util::conjunction&lt; Trait &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1conjunction_3_01_trait_00_01_traits_8_8_8_01_4" prot="public">boost::geometry::util::conjunction&lt; Trait, Traits... &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1disjunction" prot="public">boost::geometry::util::disjunction</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1disjunction_3_01_trait_01_4" prot="public">boost::geometry::util::disjunction&lt; Trait &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1disjunction_3_01_trait_00_01_traits_8_8_8_01_4" prot="public">boost::geometry::util::disjunction&lt; Trait, Traits... &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__areal" prot="public">boost::geometry::util::enable_if_areal</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__box" prot="public">boost::geometry::util::enable_if_box</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__dynamic__geometry" prot="public">boost::geometry::util::enable_if_dynamic_geometry</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__geometry__collection" prot="public">boost::geometry::util::enable_if_geometry_collection</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__linear" prot="public">boost::geometry::util::enable_if_linear</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__linestring" prot="public">boost::geometry::util::enable_if_linestring</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__multi__linestring" prot="public">boost::geometry::util::enable_if_multi_linestring</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__multi__point" prot="public">boost::geometry::util::enable_if_multi_point</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__multi__polygon" prot="public">boost::geometry::util::enable_if_multi_polygon</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__point" prot="public">boost::geometry::util::enable_if_point</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__pointlike" prot="public">boost::geometry::util::enable_if_pointlike</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__polygon" prot="public">boost::geometry::util::enable_if_polygon</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__polygonal" prot="public">boost::geometry::util::enable_if_polygonal</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__polylinear" prot="public">boost::geometry::util::enable_if_polylinear</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__polysegmental" prot="public">boost::geometry::util::enable_if_polysegmental</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__ring" prot="public">boost::geometry::util::enable_if_ring</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1enable__if__segment" prot="public">boost::geometry::util::enable_if_segment</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__areal" prot="public">boost::geometry::util::is_areal</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__box" prot="public">boost::geometry::util::is_box</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__dynamic__geometry" prot="public">boost::geometry::util::is_dynamic_geometry</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__geometry" prot="public">boost::geometry::util::is_geometry</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__geometry__collection" prot="public">boost::geometry::util::is_geometry_collection</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__linear" prot="public">boost::geometry::util::is_linear</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__linestring" prot="public">boost::geometry::util::is_linestring</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__multi" prot="public">boost::geometry::util::is_multi</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__multi__element" prot="public">boost::geometry::util::is_multi_element</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__multi__linestring" prot="public">boost::geometry::util::is_multi_linestring</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__multi__point" prot="public">boost::geometry::util::is_multi_point</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__multi__polygon" prot="public">boost::geometry::util::is_multi_polygon</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__not__geometry" prot="public">boost::geometry::util::is_not_geometry</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__point" prot="public">boost::geometry::util::is_point</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__pointlike" prot="public">boost::geometry::util::is_pointlike</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__polygon" prot="public">boost::geometry::util::is_polygon</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__polygonal" prot="public">boost::geometry::util::is_polygonal</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__polylinear" prot="public">boost::geometry::util::is_polylinear</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__polysegmental" prot="public">boost::geometry::util::is_polysegmental</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__ring" prot="public">boost::geometry::util::is_ring</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__segment" prot="public">boost::geometry::util::is_segment</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__segmental" prot="public">boost::geometry::util::is_segmental</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__sequence" prot="public">boost::geometry::util::is_sequence</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__sequence_3_01std_1_1integer__sequence_3_01_t_00_01_is_8_8_8_01_4_01_4" prot="public">boost::geometry::util::is_sequence&lt; std::integer_sequence&lt; T, Is... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__sequence_3_01type__sequence_3_01_ts_8_8_8_01_4_01_4" prot="public">boost::geometry::util::is_sequence&lt; type_sequence&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1is__single" prot="public">boost::geometry::util::is_single</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1negation" prot="public">boost::geometry::util::negation</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1pack__front" prot="public">boost::geometry::util::pack_front</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1pack__front_3_01_t_00_01_ts_8_8_8_01_4" prot="public">boost::geometry::util::pack_front&lt; T, Ts... &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1pack__min__element" prot="public">boost::geometry::util::pack_min_element</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1pack__min__element_3_01_less_pred_00_01_t_01_4" prot="public">boost::geometry::util::pack_min_element&lt; LessPred, T &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1pack__min__element_3_01_less_pred_00_01_t1_00_01_t2_01_4" prot="public">boost::geometry::util::pack_min_element&lt; LessPred, T1, T2 &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1pack__min__element_3_01_less_pred_00_01_t1_00_01_t2_00_01_ts_8_8_8_01_4" prot="public">boost::geometry::util::pack_min_element&lt; LessPred, T1, T2, Ts... &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1remove__cptrref" prot="public">boost::geometry::util::remove_cptrref</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1remove__cref" prot="public">boost::geometry::util::remove_cref</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1remove__cvref" prot="public">boost::geometry::util::remove_cvref</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__back" prot="public">boost::geometry::util::sequence_back</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__combine" prot="public">boost::geometry::util::sequence_combine</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__combine_3_01std_1_1integer__sequence_3_01_t_00_01_ic9ee6c4b6d54181af740c63aabae4247" prot="public">boost::geometry::util::sequence_combine&lt; std::integer_sequence&lt; T, I1s... &gt;, std::integer_sequence&lt; T, I2s... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__combine_3_01type__sequence_3_01_t1s_8_8_8_01_4_00_06bf9a3f0802c04b47cfe0bcc0b96f60d" prot="public">boost::geometry::util::sequence_combine&lt; type_sequence&lt; T1s... &gt;, type_sequence&lt; T2s... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__element" prot="public">boost::geometry::util::sequence_element</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__element_3_010_00_01std_1_1integer__sequence_3_01_t_6f1c06fadc01a8b3e8503df433e909e8" prot="public">boost::geometry::util::sequence_element&lt; 0, std::integer_sequence&lt; T, J, Js... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__element_3_010_00_01type__sequence_3_01_t_00_01_ts_8_8_8_01_4_01_4" prot="public">boost::geometry::util::sequence_element&lt; 0, type_sequence&lt; T, Ts... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__element_3_01_i_00_01std_1_1integer__sequence_3_01_te3a168cd4c30eb8cd86ab4f24187283b" prot="public">boost::geometry::util::sequence_element&lt; I, std::integer_sequence&lt; T, J, Js... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__element_3_01_i_00_01type__sequence_3_01_t_00_01_ts_8_8_8_01_4_01_4" prot="public">boost::geometry::util::sequence_element&lt; I, type_sequence&lt; T, Ts... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__empty" prot="public">boost::geometry::util::sequence_empty</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__find__if" prot="public">boost::geometry::util::sequence_find_if</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__find__if_3_01type__sequence_3_01_t_00_01_ts_8_8_8_01_4_00_01_unary_pred_01_4" prot="public">boost::geometry::util::sequence_find_if&lt; type_sequence&lt; T, Ts... &gt;, UnaryPred &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__find__if_3_01type__sequence_3_4_00_01_unary_pred_01_4" prot="public">boost::geometry::util::sequence_find_if&lt; type_sequence&lt;&gt;, UnaryPred &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__front" prot="public">boost::geometry::util::sequence_front</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__merge" prot="public">boost::geometry::util::sequence_merge</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__merge_3_01_s_01_4" prot="public">boost::geometry::util::sequence_merge&lt; S &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__merge_3_01_s1_00_01_s2_00_01_sequences_8_8_8_01_4" prot="public">boost::geometry::util::sequence_merge&lt; S1, S2, Sequences... &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__merge_3_01std_1_1integer__sequence_3_01_t_00_01_i1sec3b7a80442835b4b77a1c1720446bcd" prot="public">boost::geometry::util::sequence_merge&lt; std::integer_sequence&lt; T, I1s... &gt;, std::integer_sequence&lt; T, I2s... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__merge_3_01type__sequence_3_01_t1s_8_8_8_01_4_00_01t52357a89955f9551945a7a6b59af84c7" prot="public">boost::geometry::util::sequence_merge&lt; type_sequence&lt; T1s... &gt;, type_sequence&lt; T2s... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__min__element" prot="public">boost::geometry::util::sequence_min_element</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__min__element_3_01type__sequence_3_01_ts_8_8_8_01_4_00_01_less_pred_01_4" prot="public">boost::geometry::util::sequence_min_element&lt; type_sequence&lt; Ts... &gt;, LessPred &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__size" prot="public">boost::geometry::util::sequence_size</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__size_3_01std_1_1integer__sequence_3_01_t_00_01_is_8_8_8_01_4_01_4" prot="public">boost::geometry::util::sequence_size&lt; std::integer_sequence&lt; T, Is... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1sequence__size_3_01type__sequence_3_01_ts_8_8_8_01_4_01_4" prot="public">boost::geometry::util::sequence_size&lt; type_sequence&lt; Ts... &gt; &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1transcribe__const" prot="public">boost::geometry::util::transcribe_const</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1transcribe__cref" prot="public">boost::geometry::util::transcribe_cref</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1transcribe__reference" prot="public">boost::geometry::util::transcribe_reference</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1transcribe__reference_3_01_from_01_6_6_00_01_to_01_4" prot="public">boost::geometry::util::transcribe_reference&lt; From &amp;&amp;, To &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1transcribe__reference_3_01_from_01_6_00_01_to_01_4" prot="public">boost::geometry::util::transcribe_reference&lt; From &amp;, To &gt;</innerclass>
    <innerclass refid="structboost_1_1geometry_1_1util_1_1type__sequence" prot="public">boost::geometry::util::type_sequence</innerclass>
    <innernamespace refid="namespaceboost_1_1geometry_1_1util_1_1calculation__type">boost::geometry::util::calculation_type</innernamespace>
    <innernamespace refid="namespaceboost_1_1geometry_1_1util_1_1detail">boost::geometry::util::detail</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1ac59c4fea825e61b7a25ea0cd948d3e96" prot="public" static="no">
        <type><ref refid="structboost_1_1geometry_1_1util_1_1remove__cptrref" kindref="compound">remove_cptrref</ref>&lt; T &gt;</type>
        <definition>using boost::geometry::util::bare_type = typedef remove_cptrref&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>bare_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="213" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="213" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a29f324f0f37cfc33ba90f31fd029222f" prot="public" static="no">
        <type>std::integral_constant&lt; bool, B &gt;</type>
        <definition>using boost::geometry::util::bool_constant = typedef std::integral_constant&lt;bool, B&gt;</definition>
        <argsstring></argsstring>
        <name>bool_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="28" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a2454038c6d4ca24742699d8fcee9f649" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__areal" kindref="compound">enable_if_areal</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_areal_t = typedef typename enable_if_areal&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_areal_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="268" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a2da015a154ac0da354d1a04507fd0fef" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__box" kindref="compound">enable_if_box</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_box_t = typedef typename enable_if_box&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_box_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="226" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a1faae7de5955bf1d56c4c7ae4891b80f" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__dynamic__geometry" kindref="compound">enable_if_dynamic_geometry</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_dynamic_geometry_t = typedef typename enable_if_dynamic_geometry&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_dynamic_geometry_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="286" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1af8f4853ffc8ce4a0537558b9bec28eae" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__geometry__collection" kindref="compound">enable_if_geometry_collection</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_geometry_collection_t = typedef typename enable_if_geometry_collection&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_geometry_collection_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="294" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1aed6b79ff9d0c79a0d7269cc86db7f96e" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__linear" kindref="compound">enable_if_linear</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_linear_t = typedef typename enable_if_linear&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_linear_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="217" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a3a82aa6225d0b5535065933f0ef75524" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__linestring" kindref="compound">enable_if_linestring</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_linestring_t = typedef typename enable_if_linestring&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_linestring_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="191" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="191" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a35e1a9518bcabcb15ff71d908633c742" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__multi__linestring" kindref="compound">enable_if_multi_linestring</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_multi_linestring_t = typedef typename enable_if_multi_linestring&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_multi_linestring_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="199" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="199" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1afc823edc31cc86dea2c5c99907a1058a" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__multi__point" kindref="compound">enable_if_multi_point</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_multi_point_t = typedef typename enable_if_multi_point&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_multi_point_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="166" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a613917363f6efd7a72db17d62f46204f" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__multi__polygon" kindref="compound">enable_if_multi_polygon</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_multi_polygon_t = typedef typename enable_if_multi_polygon&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_multi_polygon_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="250" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a8c72a562de0f8956f3e77abcfb226b11" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__point" kindref="compound">enable_if_point</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_point_t = typedef typename enable_if_point&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_point_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="157" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1ac7ec13c5e0ceb8c0625fc1f45d57d8ed" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__pointlike" kindref="compound">enable_if_pointlike</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_pointlike_t = typedef typename enable_if_pointlike&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_pointlike_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="174" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a0377cb164b89bde0c0045c325b4d5411" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__polygon" kindref="compound">enable_if_polygon</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_polygon_t = typedef typename enable_if_polygon&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_polygon_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="242" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="242" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a98ee24a523c2c804bb82f69c4cbd87eb" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__polygonal" kindref="compound">enable_if_polygonal</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_polygonal_t = typedef typename enable_if_polygonal&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_polygonal_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="259" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1ac6f55da83d1e798966c4553b0cec991a" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__polylinear" kindref="compound">enable_if_polylinear</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_polylinear_t = typedef typename enable_if_polylinear&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_polylinear_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="208" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a2a1545f9bc8120adaa6704d6c804f7e9" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__polysegmental" kindref="compound">enable_if_polysegmental</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_polysegmental_t = typedef typename enable_if_polysegmental&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_polysegmental_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="277" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a9ebce3933113efeca49429c9c07c55cd" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__ring" kindref="compound">enable_if_ring</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_ring_t = typedef typename enable_if_ring&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_ring_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="234" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a6cc5f1f3983d50e018e01b7d262b3b58" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1enable__if__segment" kindref="compound">enable_if_segment</ref>&lt; Geometry, T &gt;::type</type>
        <definition>using boost::geometry::util::enable_if_segment_t = typedef typename enable_if_segment&lt;Geometry, T&gt;::type</definition>
        <argsstring></argsstring>
        <name>enable_if_segment_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" line="183" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1aeb25c1417b65154365a09e3429d803a3" prot="public" static="no">
        <type>std::integral_constant&lt; std::size_t, I &gt;</type>
        <definition>using boost::geometry::util::index_constant = typedef std::integral_constant&lt;std::size_t, I&gt;</definition>
        <argsstring></argsstring>
        <name>index_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="36" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a4c41f718b1247b68fed343be11cdc796" prot="public" static="no">
        <type>std::integral_constant&lt; int, I &gt;</type>
        <definition>using boost::geometry::util::int_constant = typedef std::integral_constant&lt;int, I&gt;</definition>
        <argsstring></argsstring>
        <name>int_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="32" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1aa5cd671bf68f9c0d145c46d03f2cecff" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1remove__cptrref" kindref="compound">remove_cptrref</ref>&lt; T &gt;::type</type>
        <definition>using boost::geometry::util::remove_cptrref_t = typedef typename remove_cptrref&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>remove_cptrref_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="122" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a6827d84e6e248d9e76ef7ad33ebf21d5" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1remove__cref" kindref="compound">remove_cref</ref>&lt; T &gt;::type</type>
        <definition>using boost::geometry::util::remove_cref_t = typedef typename remove_cref&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>remove_cref_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="109" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a305a8ad05e6e91b02bace3a1d1574f5f" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1remove__cvref" kindref="compound">remove_cvref</ref>&lt; T &gt;::type</type>
        <definition>using boost::geometry::util::remove_cvref_t = typedef typename remove_cvref&lt;T&gt;::type</definition>
        <argsstring></argsstring>
        <name>remove_cvref_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="99" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a9bf69b73ee48a35124aa86829404cd3d" prot="public" static="no">
        <type>std::integral_constant&lt; std::size_t, S &gt;</type>
        <definition>using boost::geometry::util::size_constant = typedef std::integral_constant&lt;std::size_t, S&gt;</definition>
        <argsstring></argsstring>
        <name>size_constant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="40" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1aa702fc014b3613830e64c942fe47a119" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1transcribe__const" kindref="compound">transcribe_const</ref>&lt; From, To &gt;::type</type>
        <definition>using boost::geometry::util::transcribe_const_t = typedef typename transcribe_const&lt;From, To&gt;::type</definition>
        <argsstring></argsstring>
        <name>transcribe_const_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="138" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a58d644681f85428ee9e02b70a22b5543" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1transcribe__cref" kindref="compound">transcribe_cref</ref>&lt; From, To &gt;::type</type>
        <definition>using boost::geometry::util::transcribe_cref_t = typedef typename transcribe_cref&lt;From, To&gt;::type</definition>
        <argsstring></argsstring>
        <name>transcribe_cref_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="172" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceboost_1_1geometry_1_1util_1a9de0d93603c9af61322022c8f8c90199" prot="public" static="no">
        <type>typename <ref refid="structboost_1_1geometry_1_1util_1_1transcribe__reference" kindref="compound">transcribe_reference</ref>&lt; From, To &gt;::type</type>
        <definition>using boost::geometry::util::transcribe_reference_t = typedef typename transcribe_reference&lt;From, To&gt;::type</definition>
        <argsstring></argsstring>
        <name>transcribe_reference_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" line="161" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/type_traits_std.hpp" bodystart="161" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/util/calculation_type.hpp" line="30" column="1"/>
  </compounddef>
</doxygen>

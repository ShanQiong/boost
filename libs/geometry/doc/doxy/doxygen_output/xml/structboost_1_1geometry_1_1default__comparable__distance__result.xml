<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structboost_1_1geometry_1_1default__comparable__distance__result" kind="struct" language="C++" prot="public">
    <compoundname>boost::geometry::default_comparable_distance_result</compoundname>
    <basecompoundref refid="structboost_1_1geometry_1_1comparable__distance__result_3_01_geometry1_00_01_geometry2_00_01void_01_4" prot="public" virt="non-virtual">boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, void &gt;</basecompoundref>
    <includes local="no">default_comparable_distance_result.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Geometry1</type>
      </param>
      <param>
        <type>typename Geometry2</type>
        <defval>Geometry1</defval>
      </param>
    </templateparamlist>
    <briefdescription>
<para>Meta-function defining return type of comparable_distance function. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>The strategy defines the return-type (so this situation is different from length, where distance is sqr/sqrt, but length always squared) </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="301">
        <label>boost::geometry::resolve_strategy::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1comparable__distance__result_3_01_geometry1_00_02149afb863d916b15e010f2a37dcbbd3"/>
        <childnode refid="302" relation="public-inheritance">
        </childnode>
      </node>
      <node id="303">
        <label>boost::geometry::strategy::distance::services::return_type&lt; comparable_distance_strategy_type&lt; Geometry1, Geometry2, strategies::distance::services::default_strategy&lt; Geometry1, Geometry2 &gt;::type &gt;::type, point_type&lt; Geometry1 &gt;::type, point_type&lt; Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1services_1_1return__type"/>
      </node>
      <node id="300">
        <label>boost::geometry::resolve_dynamic::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__dynamic_1_1comparable__distance__result"/>
        <childnode refid="301" relation="public-inheritance">
        </childnode>
      </node>
      <node id="302">
        <label>boost::geometry::resolve_strategy::comparable_distance_result&lt; Geometry1, Geometry2, strategies::distance::services::default_strategy&lt; Geometry1, Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1comparable__distance__result"/>
        <childnode refid="303" relation="public-inheritance">
        </childnode>
      </node>
      <node id="297">
        <label>boost::geometry::default_comparable_distance_result&lt; Geometry1, Geometry2 &gt;</label>
        <link refid="structboost_1_1geometry_1_1default__comparable__distance__result"/>
        <childnode refid="298" relation="public-inheritance">
        </childnode>
      </node>
      <node id="299">
        <label>boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1comparable__distance__result"/>
        <childnode refid="300" relation="public-inheritance">
        </childnode>
      </node>
      <node id="298">
        <label>boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, void &gt;</label>
        <link refid="structboost_1_1geometry_1_1comparable__distance__result_3_01_geometry1_00_01_geometry2_00_01void_01_4"/>
        <childnode refid="299" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="308">
        <label>boost::geometry::resolve_strategy::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1comparable__distance__result_3_01_geometry1_00_02149afb863d916b15e010f2a37dcbbd3"/>
        <childnode refid="309" relation="public-inheritance">
        </childnode>
      </node>
      <node id="310">
        <label>boost::geometry::strategy::distance::services::return_type&lt; comparable_distance_strategy_type&lt; Geometry1, Geometry2, strategies::distance::services::default_strategy&lt; Geometry1, Geometry2 &gt;::type &gt;::type, point_type&lt; Geometry1 &gt;::type, point_type&lt; Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1services_1_1return__type"/>
      </node>
      <node id="307">
        <label>boost::geometry::resolve_dynamic::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__dynamic_1_1comparable__distance__result"/>
        <childnode refid="308" relation="public-inheritance">
        </childnode>
      </node>
      <node id="309">
        <label>boost::geometry::resolve_strategy::comparable_distance_result&lt; Geometry1, Geometry2, strategies::distance::services::default_strategy&lt; Geometry1, Geometry2 &gt;::type &gt;</label>
        <link refid="structboost_1_1geometry_1_1resolve__strategy_1_1comparable__distance__result"/>
        <childnode refid="310" relation="public-inheritance">
        </childnode>
      </node>
      <node id="304">
        <label>boost::geometry::default_comparable_distance_result&lt; Geometry1, Geometry2 &gt;</label>
        <link refid="structboost_1_1geometry_1_1default__comparable__distance__result"/>
        <childnode refid="305" relation="public-inheritance">
        </childnode>
      </node>
      <node id="306">
        <label>boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, default_strategy &gt;</label>
        <link refid="structboost_1_1geometry_1_1comparable__distance__result"/>
        <childnode refid="307" relation="public-inheritance">
        </childnode>
      </node>
      <node id="305">
        <label>boost::geometry::comparable_distance_result&lt; Geometry1, Geometry2, void &gt;</label>
        <link refid="structboost_1_1geometry_1_1comparable__distance__result_3_01_geometry1_00_01_geometry2_00_01void_01_4"/>
        <childnode refid="306" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/default_comparable_distance_result.hpp" line="37" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategies/default_comparable_distance_result.hpp" bodystart="35" bodyend="37"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1strategy_1_1distance_1_1services_1_1return__type_1a289d28d91348eae4c07808b6b5f1bdfc" prot="public" virt="non-virtual"><scope>boost::geometry::default_comparable_distance_result</scope><name>BOOST_GEOMETRY_STATIC_ASSERT_FALSE</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

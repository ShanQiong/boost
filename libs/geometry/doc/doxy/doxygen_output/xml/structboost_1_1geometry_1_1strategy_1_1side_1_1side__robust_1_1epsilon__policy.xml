<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy" kind="struct" language="C++" prot="public">
    <compoundname>boost::geometry::strategy::side::side_robust::epsilon_policy</compoundname>
    <includes local="no">side_robust.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename CT</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a95b949203c88bfd5c3a34c758b3c0c7b" prot="public" static="no">
        <type>boost::geometry::math::detail::equals_factor_policy&lt; CT &gt;</type>
        <definition>using boost::geometry::strategy::side::side_robust&lt; CalculationType, EqualsPolicy, Robustness &gt;::epsilon_policy&lt; CT &gt;::Policy =  boost::geometry::math::detail::equals_factor_policy&lt;CT&gt;</definition>
        <argsstring></argsstring>
        <name>Policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" line="78" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a6214a44c71c38d51db65af1ebe75bef9" prot="public" static="no" mutable="no">
        <type><ref refid="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a95b949203c88bfd5c3a34c758b3c0c7b" kindref="member">Policy</ref></type>
        <definition>Policy boost::geometry::strategy::side::side_robust&lt; CalculationType, EqualsPolicy, Robustness &gt;::epsilon_policy&lt; CT &gt;::m_policy</definition>
        <argsstring></argsstring>
        <name>m_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" line="86" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a1ebbd7d1ba8568a4f6544bb57cd8368b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::strategy::side::side_robust&lt; CalculationType, EqualsPolicy, Robustness &gt;::epsilon_policy&lt; CT &gt;::apply</definition>
        <argsstring>(T1 a, T2 b) const</argsstring>
        <name>apply</name>
        <param>
          <type>T1</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" line="91" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a7a6e820217e04280b2899b4d3e9a273b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::strategy::side::side_robust&lt; CalculationType, EqualsPolicy, Robustness &gt;::epsilon_policy&lt; CT &gt;::epsilon_policy</definition>
        <argsstring>()</argsstring>
        <name>epsilon_policy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" line="80" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a27fc8c880a5ecc0511da4c75d6a9d0f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>boost::geometry::strategy::side::side_robust&lt; CalculationType, EqualsPolicy, Robustness &gt;::epsilon_policy&lt; CT &gt;::epsilon_policy</definition>
        <argsstring>(Type const &amp;a, Type const &amp;b, Type const &amp;c, Type const &amp;d)</argsstring>
        <name>epsilon_policy</name>
        <param>
          <type>Type const &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>Type const &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>Type const &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>Type const &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" line="83" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" bodystart="83" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" line="77" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/strategy/cartesian/side_robust.hpp" bodystart="76" bodyend="95"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a1ebbd7d1ba8568a4f6544bb57cd8368b" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::side::side_robust::epsilon_policy</scope><name>apply</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a7a6e820217e04280b2899b4d3e9a273b" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::side::side_robust::epsilon_policy</scope><name>epsilon_policy</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a27fc8c880a5ecc0511da4c75d6a9d0f2" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::side::side_robust::epsilon_policy</scope><name>epsilon_policy</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a6214a44c71c38d51db65af1ebe75bef9" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::side::side_robust::epsilon_policy</scope><name>m_policy</name></member>
      <member refid="structboost_1_1geometry_1_1strategy_1_1side_1_1side__robust_1_1epsilon__policy_1a95b949203c88bfd5c3a34c758b3c0c7b" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::side::side_robust::epsilon_policy</scope><name>Policy</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

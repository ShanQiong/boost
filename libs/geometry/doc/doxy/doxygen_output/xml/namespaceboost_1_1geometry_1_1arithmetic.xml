<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="namespaceboost_1_1geometry_1_1arithmetic" kind="namespace" language="C++">
    <compoundname>boost::geometry::arithmetic</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceboost_1_1geometry_1_1arithmetic_1ad00f5a3bcd12f05f5fa6e87bb08ba97b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Point</type>
          </param>
          <param>
            <type>typename Line</type>
          </param>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>Point</type>
        <definition>Point boost::geometry::arithmetic::assign_intersection_point</definition>
        <argsstring>(Line const &amp;p, Line const &amp;q, Type const &amp;denominator)</argsstring>
        <name>assign_intersection_point</name>
        <param>
          <type>Line const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Line const &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>Type const &amp;</type>
          <declname>denominator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" line="34" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" bodystart="34" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1geometry_1_1arithmetic_1a4ca1ad96ed08410685ea7d016705d2ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Line</type>
          </param>
          <param>
            <type>typename Line::type Line::*</type>
            <declname>member1</declname>
            <defname>member1</defname>
          </param>
          <param>
            <type>typename Line::type Line::*</type>
            <declname>member2</declname>
            <defname>member2</defname>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto boost::geometry::arithmetic::determinant</definition>
        <argsstring>(Line const &amp;p, Line const &amp;q)</argsstring>
        <name>determinant</name>
        <param>
          <type>Line const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Line const &amp;</type>
          <declname>q</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" line="27" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1geometry_1_1arithmetic_1a8d454f1dd2f234f77c40e202a65db230" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Line</type>
          </param>
          <param>
            <type>typename Point</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::arithmetic::intersection_point</definition>
        <argsstring>(Line const &amp;p, Line const &amp;q, Point &amp;ip)</argsstring>
        <name>intersection_point</name>
        <param>
          <type>Line const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>Line const &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>Point &amp;</type>
          <declname>ip</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" line="51" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" bodystart="51" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1geometry_1_1arithmetic_1a4109f313c5fc1cecefa48b63decee9eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::arithmetic::is_degenerate</definition>
        <argsstring>(const model::infinite_line&lt; Type &gt; &amp;line)</argsstring>
        <name>is_degenerate</name>
        <param>
          <type>const <ref refid="structboost_1_1geometry_1_1model_1_1infinite__line" kindref="compound">model::infinite_line</ref>&lt; Type &gt; &amp;</type>
          <declname>line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" line="100" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" bodystart="100" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1geometry_1_1arithmetic_1ac55c7d17e4417b9e8c858f85894af7c9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename CoordinateType</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1select__most__precise" kindref="compound">select_most_precise</ref>&lt; Type, CoordinateType &gt;::type</type>
        <definition>select_most_precise&lt;Type, CoordinateType&gt;::type boost::geometry::arithmetic::side_value</definition>
        <argsstring>(model::infinite_line&lt; Type &gt; const &amp;line, CoordinateType const &amp;x, CoordinateType const &amp;y)</argsstring>
        <name>side_value</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1model_1_1infinite__line" kindref="compound">model::infinite_line</ref>&lt; Type &gt; const &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>CoordinateType const &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>CoordinateType const &amp;</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return a distance-side-measure for a point to a line Point is located left of the line if value is positive, right of the line is value is negative, and on the line if the value is exactly zero </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" line="74" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" bodystart="74" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="namespaceboost_1_1geometry_1_1arithmetic_1a0f38e14bfe032d3a968f72ead7eba3f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Type</type>
          </param>
          <param>
            <type>typename Point</type>
          </param>
        </templateparamlist>
        <type><ref refid="structboost_1_1geometry_1_1select__most__precise" kindref="compound">select_most_precise</ref>&lt; Type, typename <ref refid="structboost_1_1geometry_1_1coordinate__type" kindref="compound">geometry::coordinate_type</ref>&lt; Point &gt;::type &gt;::type</type>
        <definition>select_most_precise&lt; Type, typename geometry::coordinate_type&lt;Point&gt;::type&gt;::type boost::geometry::arithmetic::side_value</definition>
        <argsstring>(model::infinite_line&lt; Type &gt; const &amp;line, Point const &amp;p)</argsstring>
        <name>side_value</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1model_1_1infinite__line" kindref="compound">model::infinite_line</ref>&lt; Type &gt; const &amp;</type>
          <declname>line</declname>
        </param>
        <param>
          <type>Point const &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" line="94" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/arithmetic/infinite_line_functions.hpp" line="24" column="1"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky" kind="class" language="C++" prot="public">
    <compoundname>boost::geometry::strategy::intersection::liang_barsky</compoundname>
    <includes local="no">clip_linestring.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Box</declname>
        <defname>Box</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>Point</declname>
        <defname>Point</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1a0b2aed7568ba477923b7993b75a87b86" prot="private" static="no">
        <type><ref refid="classboost_1_1geometry_1_1model_1_1referring__segment" kindref="compound">model::referring_segment</ref>&lt; Point &gt;</type>
        <definition>typedef model::referring_segment&lt;Point&gt; boost::geometry::strategy::intersection::liang_barsky&lt; Box, Point &gt;::segment_type</definition>
        <argsstring></argsstring>
        <name>segment_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" line="57" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" bodystart="57" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1abc15392823da7e0a7d912a65f1b9a7c6" prot="public" static="no">
        <type><ref refid="structboost_1_1geometry_1_1strategy_1_1within_1_1cartesian__point__point" kindref="compound">strategy::within::cartesian_point_point</ref></type>
        <definition>typedef strategy::within::cartesian_point_point boost::geometry::strategy::intersection::liang_barsky&lt; Box, Point &gt;::equals_point_point_strategy_type</definition>
        <argsstring></argsstring>
        <name>equals_point_point_strategy_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" line="93" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" bodystart="93" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1abb14fd094cfd9c410c0d5a384d775d26" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CoordinateType</type>
          </param>
          <param>
            <type>typename CalcType</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::strategy::intersection::liang_barsky&lt; Box, Point &gt;::check_edge</definition>
        <argsstring>(CoordinateType const &amp;p, CoordinateType const &amp;q, CalcType &amp;t1, CalcType &amp;t2) const</argsstring>
        <name>check_edge</name>
        <param>
          <type>CoordinateType const &amp;</type>
          <declname>p</declname>
        </param>
        <param>
          <type>CoordinateType const &amp;</type>
          <declname>q</declname>
        </param>
        <param>
          <type>CalcType &amp;</type>
          <declname>t1</declname>
        </param>
        <param>
          <type>CalcType &amp;</type>
          <declname>t2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" line="60" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" bodystart="60" bodyend="87"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1a6a01f36c4370c67a0c330c7cd2cd81b4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1abc15392823da7e0a7d912a65f1b9a7c6" kindref="member">equals_point_point_strategy_type</ref></type>
        <definition>static equals_point_point_strategy_type boost::geometry::strategy::intersection::liang_barsky&lt; Box, Point &gt;::get_equals_point_point_strategy</definition>
        <argsstring>()</argsstring>
        <name>get_equals_point_point_strategy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" line="95" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" bodystart="95" bodyend="98"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1afaee6925d9398e49c8fd8e969f7add25" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Linestring</type>
          </param>
          <param>
            <type>typename OutputIterator</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::strategy::intersection::liang_barsky&lt; Box, Point &gt;::apply</definition>
        <argsstring>(Linestring &amp;line_out, OutputIterator out) const</argsstring>
        <name>apply</name>
        <param>
          <type>Linestring &amp;</type>
          <declname>line_out</declname>
        </param>
        <param>
          <type>OutputIterator</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" line="148" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" bodystart="148" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1a34f0d489abc4c640ceb375591c51d6dd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::strategy::intersection::liang_barsky&lt; Box, Point &gt;::clip_segment</definition>
        <argsstring>(Box const &amp;b, segment_type &amp;s, bool &amp;sp1_clipped, bool &amp;sp2_clipped) const</argsstring>
        <name>clip_segment</name>
        <param>
          <type>Box const &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type><ref refid="classboost_1_1geometry_1_1model_1_1referring__segment" kindref="compound">segment_type</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>sp1_clipped</declname>
        </param>
        <param>
          <type>bool &amp;</type>
          <declname>sp2_clipped</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" line="100" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" bodystart="100" bodyend="145"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Strategy: line clipping algorithm after Liang Barsky. </para>    </briefdescription>
    <detaileddescription>
<para>The Liang-Barsky line clipping algorithm clips a line with a clipping box. It is slightly adapted in the sense that it returns which points are clipped <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>B</parametername>
</parameternamelist>
<parameterdescription>
<para>input box type of clipping box </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>P</parametername>
</parameternamelist>
<parameterdescription>
<para>input/output point-type of segments to be clipped </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>The algorithm is currently only implemented for 2D Cartesian points </para></simplesect>
<simplesect kind="note"><para>Though it is implemented in namespace strategy, and theoretically another strategy could be used, it is not (yet) updated to the general strategy concepts, and not (yet) splitted into a file in folder strategies </para></simplesect>
<simplesect kind="author"><para>Barend Gehrels, and the following recourses<itemizedlist>
<listitem><para>A tutorial: <ulink url="http://www.skytopia.com/project/articles/compsci/clipping.html">http://www.skytopia.com/project/articles/compsci/clipping.html</ulink></para></listitem><listitem><para>a German applet (link broken): <ulink url="http://ls7-www.cs.uni-dortmund.de/students/projectgroups/acit/lineclip.shtml">http://ls7-www.cs.uni-dortmund.de/students/projectgroups/acit/lineclip.shtml</ulink> </para></listitem></itemizedlist>
</para></simplesect>
</para>    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" line="55" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/overlay/clip_linestring.hpp" bodystart="54" bodyend="157"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1afaee6925d9398e49c8fd8e969f7add25" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::liang_barsky</scope><name>apply</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1abb14fd094cfd9c410c0d5a384d775d26" prot="private" virt="non-virtual"><scope>boost::geometry::strategy::intersection::liang_barsky</scope><name>check_edge</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1a34f0d489abc4c640ceb375591c51d6dd" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::liang_barsky</scope><name>clip_segment</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1abc15392823da7e0a7d912a65f1b9a7c6" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::liang_barsky</scope><name>equals_point_point_strategy_type</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1a6a01f36c4370c67a0c330c7cd2cd81b4" prot="public" virt="non-virtual"><scope>boost::geometry::strategy::intersection::liang_barsky</scope><name>get_equals_point_point_strategy</name></member>
      <member refid="classboost_1_1geometry_1_1strategy_1_1intersection_1_1liang__barsky_1a0b2aed7568ba477923b7993b75a87b86" prot="private" virt="non-virtual"><scope>boost::geometry::strategy::intersection::liang_barsky</scope><name>segment_type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

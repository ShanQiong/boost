<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structboost_1_1geometry_1_1closing__iterator" kind="struct" language="C++" prot="public">
    <compoundname>boost::geometry::closing_iterator</compoundname>
    <basecompoundref prot="public" virt="non-virtual">boost::iterator_facade&lt; closing_iterator&lt; Range &gt;, boost::range_value&lt; Range &gt;::type const, boost::random_access_traversal_tag, boost::range_reference&lt; Range const &gt;::type, boost::range_difference&lt; Range &gt;::type &gt;</basecompoundref>
    <includes local="no">closing_iterator.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Range</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1closing__iterator_1a8e8c896e40d2a9b02a9debbd50759e12" prot="private" static="no">
        <type>boost::iterator_facade&lt; <ref refid="structboost_1_1geometry_1_1closing__iterator" kindref="compound">closing_iterator</ref>&lt; Range &gt;, typename boost::range_value&lt; Range &gt;::type const, boost::random_access_traversal_tag, typename boost::range_reference&lt; Range const  &gt;::type, typename boost::range_difference&lt; Range &gt;::type &gt;</type>
        <definition>typedef boost::iterator_facade&lt; closing_iterator&lt;Range&gt;, typename boost::range_value&lt;Range&gt;::type const, boost::random_access_traversal_tag, typename boost::range_reference&lt;Range const&gt;::type, typename boost::range_difference&lt;Range&gt;::type &gt; boost::geometry::closing_iterator&lt; Range &gt;::base_type</definition>
        <argsstring></argsstring>
        <name>base_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="63" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="63" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1closing__iterator_1aa00c5fc6233a2e7a5be07f2ee4e4dba8" prot="public" static="no">
        <type>base_type::difference_type</type>
        <definition>typedef base_type::difference_type boost::geometry::closing_iterator&lt; Range &gt;::difference_type</definition>
        <argsstring></argsstring>
        <name>difference_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="67" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structboost_1_1geometry_1_1closing__iterator_1a02094136f85bbf3d3e37a37df4255290" prot="public" static="no">
        <type>base_type::reference</type>
        <definition>typedef base_type::reference boost::geometry::closing_iterator&lt; Range &gt;::reference</definition>
        <argsstring></argsstring>
        <name>reference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="66" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structboost_1_1geometry_1_1closing__iterator_1ac09f73e325921cc50ebcd96bed0f8096" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class boost::iterator_core_access</definition>
        <argsstring></argsstring>
        <name>boost::iterator_core_access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="116" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="structboost_1_1geometry_1_1closing__iterator_1a1bdad0d8f9bd8528ad49a83d3ef50a45" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherRange</type>
          </param>
        </templateparamlist>
        <type>friend struct</type>
        <definition>friend struct closing_iterator</definition>
        <argsstring></argsstring>
        <name>closing_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="115" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="structboost_1_1geometry_1_1closing__iterator_1ab14f627c789948d783dc41b92415923e" prot="private" static="no" mutable="no">
        <type>boost::range_iterator&lt; Range const  &gt;::type</type>
        <definition>boost::range_iterator&lt;Range const&gt;::type boost::geometry::closing_iterator&lt; Range &gt;::m_begin</definition>
        <argsstring></argsstring>
        <name>m_begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="181" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1closing__iterator_1ab3a889b72c2a30405f1b43ae76fe0901" prot="private" static="no" mutable="no">
        <type>boost::range_iterator&lt; Range const  &gt;::type</type>
        <definition>boost::range_iterator&lt;Range const&gt;::type boost::geometry::closing_iterator&lt; Range &gt;::m_end</definition>
        <argsstring></argsstring>
        <name>m_end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="182" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1closing__iterator_1a34a65a7f4f386fb659ea790d7be11d0c" prot="private" static="no" mutable="no">
        <type><ref refid="structboost_1_1geometry_1_1closing__iterator_1aa00c5fc6233a2e7a5be07f2ee4e4dba8" kindref="member">difference_type</ref></type>
        <definition>difference_type boost::geometry::closing_iterator&lt; Range &gt;::m_index</definition>
        <argsstring></argsstring>
        <name>m_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="184" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1closing__iterator_1a6ce86ad7795e14bc288e1fe63639588e" prot="private" static="no" mutable="no">
        <type>boost::range_iterator&lt; Range const  &gt;::type</type>
        <definition>boost::range_iterator&lt;Range const&gt;::type boost::geometry::closing_iterator&lt; Range &gt;::m_iterator</definition>
        <argsstring></argsstring>
        <name>m_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="180" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="180" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structboost_1_1geometry_1_1closing__iterator_1a251a6032c0bf291de13a7507efe21ce0" prot="private" static="no" mutable="no">
        <type><ref refid="structboost_1_1geometry_1_1closing__iterator_1aa00c5fc6233a2e7a5be07f2ee4e4dba8" kindref="member">difference_type</ref></type>
        <definition>difference_type boost::geometry::closing_iterator&lt; Range &gt;::m_size</definition>
        <argsstring></argsstring>
        <name>m_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="183" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1a0de9b0eeeb3ac9c4e56ef785d850e091" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::closing_iterator&lt; Range &gt;::closing_iterator</definition>
        <argsstring>(Range const &amp;range)</argsstring>
        <name>closing_iterator</name>
        <param>
          <type>Range const &amp;</type>
          <declname>range</declname>
        </param>
        <briefdescription>
<para>Constructor including the range it is based on. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="70" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="70" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1afb2f736a699d7704a79ef6c9c62f4520" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::closing_iterator&lt; Range &gt;::closing_iterator</definition>
        <argsstring>(Range const &amp;range, bool)</argsstring>
        <name>closing_iterator</name>
        <param>
          <type>Range const &amp;</type>
          <declname>range</declname>
        </param>
        <param>
          <type>bool</type>
        </param>
        <briefdescription>
<para>Constructor to indicate the end of a range. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="79" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="79" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1a2b7911423a677e81b20845aa9d7c8765" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::closing_iterator&lt; Range &gt;::closing_iterator</definition>
        <argsstring>()</argsstring>
        <name>closing_iterator</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="88" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1a913c5d2bd44075cab07b4d8e9099fd74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherRange</type>
          </param>
          <param>
            <type>std::enable_if_t&lt; std::is_convertible&lt; typename boost::range_iterator&lt; OtherRange const &gt;::type, typename boost::range_iterator&lt; Range const &gt;::type &gt;::value, int &gt;</type>
            <defval>0</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>boost::geometry::closing_iterator&lt; Range &gt;::closing_iterator</definition>
        <argsstring>(closing_iterator&lt; OtherRange &gt; const &amp;other)</argsstring>
        <name>closing_iterator</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1closing__iterator" kindref="compound">closing_iterator</ref>&lt; OtherRange &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="106" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="106" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1a151e29dadb41189ea0fd5b7e960f68f8" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::geometry::closing_iterator&lt; Range &gt;::advance</definition>
        <argsstring>(difference_type n)</argsstring>
        <name>advance</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1closing__iterator_1aa00c5fc6233a2e7a5be07f2ee4e4dba8" kindref="member">difference_type</ref></type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="158" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="158" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1a7ba49e3823999d2058e0b089e55e51df" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::geometry::closing_iterator&lt; Range &gt;::decrement</definition>
        <argsstring>()</argsstring>
        <name>decrement</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="146" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="146" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1aee44c3087cc5855d831861f761e39ef4" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1closing__iterator_1a02094136f85bbf3d3e37a37df4255290" kindref="member">reference</ref></type>
        <definition>reference boost::geometry::closing_iterator&lt; Range &gt;::dereference</definition>
        <argsstring>() const</argsstring>
        <name>dereference</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="118" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="118" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1a18643910348bf23066bc8ccaeb6e5243" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structboost_1_1geometry_1_1closing__iterator_1aa00c5fc6233a2e7a5be07f2ee4e4dba8" kindref="member">difference_type</ref></type>
        <definition>difference_type boost::geometry::closing_iterator&lt; Range &gt;::distance_to</definition>
        <argsstring>(closing_iterator&lt; Range &gt; const &amp;other) const</argsstring>
        <name>distance_to</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1closing__iterator" kindref="compound">closing_iterator</ref>&lt; Range &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="123" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="123" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1ab5607a35bbbd131e3af0125ca99bcb70" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool boost::geometry::closing_iterator&lt; Range &gt;::equal</definition>
        <argsstring>(closing_iterator&lt; Range &gt; const &amp;other) const</argsstring>
        <name>equal</name>
        <param>
          <type><ref refid="structboost_1_1geometry_1_1closing__iterator" kindref="compound">closing_iterator</ref>&lt; Range &gt; const &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="128" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1a6fb146550f37dfc1efa8d105b05fdb58" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::geometry::closing_iterator&lt; Range &gt;::increment</definition>
        <argsstring>()</argsstring>
        <name>increment</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="134" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="134" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="structboost_1_1geometry_1_1closing__iterator_1a264a66e2530715568de6e412f45fff18" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::geometry::closing_iterator&lt; Range &gt;::update_iterator</definition>
        <argsstring>()</argsstring>
        <name>update_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="172" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="172" bodyend="178"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Iterator which iterates through a range, but adds first element at end of the range. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Range</parametername>
</parameternamelist>
<parameterdescription>
<para>range on which this class is based on</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>It&apos;s const iterator treating the Range as one containing non-mutable elements. For both &quot;closing_iterator&lt;Range&gt; and &quot;closing_iterator&lt;Range const&gt; const reference is always returned when dereferenced. </para></simplesect>
<simplesect kind="note"><para>This class is normally used from &quot;closeable_view&quot; if Close==true </para></simplesect>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="38">
        <label>boost::iterator_facade&lt; closing_iterator&lt; Range &gt;, boost::range_value&lt; Range &gt;::type const, boost::random_access_traversal_tag, boost::range_reference&lt; Range const &gt;::type, boost::range_difference&lt; Range &gt;::type &gt;</label>
      </node>
      <node id="37">
        <label>boost::geometry::closing_iterator&lt; Range &gt;</label>
        <link refid="structboost_1_1geometry_1_1closing__iterator"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="40">
        <label>boost::iterator_facade&lt; closing_iterator&lt; Range &gt;, boost::range_value&lt; Range &gt;::type const, boost::random_access_traversal_tag, boost::range_reference&lt; Range const &gt;::type, boost::range_difference&lt; Range &gt;::type &gt;</label>
      </node>
      <node id="39">
        <label>boost::geometry::closing_iterator&lt; Range &gt;</label>
        <link refid="structboost_1_1geometry_1_1closing__iterator"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" line="54" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/iterators/closing_iterator.hpp" bodystart="45" bodyend="185"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a151e29dadb41189ea0fd5b7e960f68f8" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>advance</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a8e8c896e40d2a9b02a9debbd50759e12" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>base_type</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1ac09f73e325921cc50ebcd96bed0f8096" prot="public" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>boost::iterator_core_access</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a1bdad0d8f9bd8528ad49a83d3ef50a45" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>closing_iterator</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a0de9b0eeeb3ac9c4e56ef785d850e091" prot="public" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>closing_iterator</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1afb2f736a699d7704a79ef6c9c62f4520" prot="public" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>closing_iterator</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a2b7911423a677e81b20845aa9d7c8765" prot="public" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>closing_iterator</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a913c5d2bd44075cab07b4d8e9099fd74" prot="public" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>closing_iterator</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a7ba49e3823999d2058e0b089e55e51df" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>decrement</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1aee44c3087cc5855d831861f761e39ef4" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>dereference</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1aa00c5fc6233a2e7a5be07f2ee4e4dba8" prot="public" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>difference_type</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a18643910348bf23066bc8ccaeb6e5243" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>distance_to</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1ab5607a35bbbd131e3af0125ca99bcb70" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>equal</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a6fb146550f37dfc1efa8d105b05fdb58" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>increment</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1ab14f627c789948d783dc41b92415923e" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>m_begin</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1ab3a889b72c2a30405f1b43ae76fe0901" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>m_end</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a34a65a7f4f386fb659ea790d7be11d0c" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>m_index</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a6ce86ad7795e14bc288e1fe63639588e" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>m_iterator</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a251a6032c0bf291de13a7507efe21ce0" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>m_size</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a02094136f85bbf3d3e37a37df4255290" prot="public" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>reference</name></member>
      <member refid="structboost_1_1geometry_1_1closing__iterator_1a264a66e2530715568de6e412f45fff18" prot="private" virt="non-virtual"><scope>boost::geometry::closing_iterator</scope><name>update_iterator</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structboost_1_1geometry_1_1traits_1_1visit_3_01boost_1_1variant2_1_1variant_3_01_ts_8_8_8_01_4_04899f49fa1e8b11b1ccf35813a901d42" kind="struct" language="C++" prot="public">
    <compoundname>boost::geometry::traits::visit&lt; boost::variant2::variant&lt; Ts... &gt;, boost::variant2::variant&lt; Us... &gt; &gt;</compoundname>
    <includes local="no">boost_variant2.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ...</type>
        <declname>Ts</declname>
        <defname>Ts</defname>
      </param>
      <param>
        <type>typename ...</type>
        <declname>Us</declname>
        <defname>Us</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structboost_1_1geometry_1_1traits_1_1visit_3_01boost_1_1variant2_1_1variant_3_01_ts_8_8_8_01_4_04899f49fa1e8b11b1ccf35813a901d42_1a53a1c398cd558f104409533e7664da82" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Function</type>
          </param>
          <param>
            <type>typename Variant1</type>
          </param>
          <param>
            <type>typename Variant2</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>static void boost::geometry::traits::visit&lt; boost::variant2::variant&lt; Ts... &gt;, boost::variant2::variant&lt; Us... &gt; &gt;::apply</definition>
        <argsstring>(Function &amp;&amp;function, Variant1 &amp;&amp;variant1, Variant2 &amp;&amp;variant2)</argsstring>
        <name>apply</name>
        <param>
          <type>Function &amp;&amp;</type>
          <declname>function</declname>
        </param>
        <param>
          <type>Variant1 &amp;&amp;</type>
          <declname>variant1</declname>
        </param>
        <param>
          <type>Variant2 &amp;&amp;</type>
          <declname>variant2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/geometries/adapted/boost_variant2.hpp" line="52" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/geometries/adapted/boost_variant2.hpp" bodystart="52" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/geometries/adapted/boost_variant2.hpp" line="50" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/geometries/adapted/boost_variant2.hpp" bodystart="49" bodyend="58"/>
    <listofallmembers>
      <member refid="structboost_1_1geometry_1_1traits_1_1visit_3_01boost_1_1variant2_1_1variant_3_01_ts_8_8_8_01_4_04899f49fa1e8b11b1ccf35813a901d42_1a53a1c398cd558f104409533e7664da82" prot="public" virt="non-virtual"><scope>boost::geometry::traits::visit&lt; boost::variant2::variant&lt; Ts... &gt;, boost::variant2::variant&lt; Us... &gt; &gt;</scope><name>apply</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

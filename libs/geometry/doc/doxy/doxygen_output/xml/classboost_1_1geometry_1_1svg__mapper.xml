<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classboost_1_1geometry_1_1svg__mapper" kind="class" language="C++" prot="public">
    <compoundname>boost::geometry::svg_mapper</compoundname>
    <basecompoundref prot="private" virt="non-virtual">noncopyable</basecompoundref>
    <includes local="no">svg_mapper.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>Point</declname>
        <defname>Point</defname>
      </param>
      <param>
        <type>bool</type>
        <declname>SameScale</declname>
        <defname>SameScale</defname>
        <defval>true</defval>
      </param>
      <param>
        <type>typename</type>
        <declname>SvgCoordinateType</declname>
        <defname>SvgCoordinateType</defname>
        <defval>double</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1svg__mapper_1a7089f4c9e3b3e34221c03c2b21464f1c" prot="private" static="no">
        <type><ref refid="structboost_1_1geometry_1_1select__most__precise" kindref="compound">geometry::select_most_precise</ref>&lt; typename <ref refid="structboost_1_1geometry_1_1coordinate__type" kindref="compound">coordinate_type</ref>&lt; Point &gt;::type, double &gt;::type</type>
        <definition>typedef geometry::select_most_precise&lt; typename coordinate_type&lt;Point&gt;::type, double &gt;::type boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::calculation_type</definition>
        <argsstring></argsstring>
        <name>calculation_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="281" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="281" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1svg__mapper_1afa455a84bf1140e4265705845e27b6d4" prot="private" static="no">
        <type><ref refid="classboost_1_1geometry_1_1model_1_1point" kindref="compound">model::point</ref>&lt; SvgCoordinateType, 2, <ref refid="structboost_1_1geometry_1_1cs_1_1cartesian" kindref="compound">cs::cartesian</ref> &gt;</type>
        <definition>typedef model::point&lt;SvgCoordinateType, 2, cs::cartesian&gt; boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::svg_point_type</definition>
        <argsstring></argsstring>
        <name>svg_point_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="275" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classboost_1_1geometry_1_1svg__mapper_1a2433227d6c15d121c002507b62ef6bc3" prot="private" static="no">
        <type><ref refid="classboost_1_1geometry_1_1strategy_1_1transform_1_1map__transformer" kindref="compound">strategy::transform::map_transformer</ref>&lt; calculation_type, <ref refid="structboost_1_1geometry_1_1dimension" kindref="compound">geometry::dimension</ref>&lt; Point &gt;::type::value, <ref refid="structboost_1_1geometry_1_1dimension" kindref="compound">geometry::dimension</ref>&lt; Point &gt;::type::value, true, SameScale &gt;</type>
        <definition>typedef strategy::transform::map_transformer&lt; calculation_type, geometry::dimension&lt;Point&gt;::type::value, geometry::dimension&lt;Point&gt;::type::value, true, SameScale &gt; boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::transformer_type</definition>
        <argsstring></argsstring>
        <name>transformer_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="290" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="290" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1a51204a1a97635d35a6c62982ca27d436" prot="private" static="no" mutable="no">
        <type><ref refid="classboost_1_1geometry_1_1model_1_1box" kindref="compound">model::box</ref>&lt; Point &gt;</type>
        <definition>model::box&lt;Point&gt; boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::m_bounding_box</definition>
        <argsstring></argsstring>
        <name>m_bounding_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="292" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1ae3d295cb2c13dc10212a0d6fd4dc2fd1" prot="private" static="no" mutable="no">
        <type>SvgCoordinateType const</type>
        <definition>SvgCoordinateType const boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::m_height</definition>
        <argsstring></argsstring>
        <name>m_height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="297" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1a6ee55394bfe7620b43c8f7f704b7a7c3" prot="private" static="no" mutable="no">
        <type>boost::scoped_ptr&lt; <ref refid="classboost_1_1geometry_1_1strategy_1_1transform_1_1map__transformer" kindref="compound">transformer_type</ref> &gt;</type>
        <definition>boost::scoped_ptr&lt;transformer_type&gt; boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::m_matrix</definition>
        <argsstring></argsstring>
        <name>m_matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="293" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="293" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1a8794d86427146dd0e256661c4f19ef94" prot="private" static="no" mutable="no">
        <type>calculation_type const</type>
        <definition>calculation_type const boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::m_scale</definition>
        <argsstring></argsstring>
        <name>m_scale</name>
        <initializer>{1.0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="298" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="298" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1a20eff16f1ed9e25621d5b1f7610ffc9f" prot="private" static="no" mutable="no">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::m_stream</definition>
        <argsstring></argsstring>
        <name>m_stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="294" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="294" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classboost_1_1geometry_1_1svg__mapper_1adc290b7464c8ba29451c94ca7d760a66" prot="private" static="no" mutable="no">
        <type>SvgCoordinateType const</type>
        <definition>SvgCoordinateType const boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::m_width</definition>
        <argsstring></argsstring>
        <name>m_width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="296" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a6ccdcb0df25c6df812f660a3110e00c7" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::init_matrix</definition>
        <argsstring>()</argsstring>
        <name>init_matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="318" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="318" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a9bacd10f4556635b566b9cd62af3fd00" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::scale_bounding_box</definition>
        <argsstring>()</argsstring>
        <name>scale_bounding_box</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="300" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="300" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a8fe2c193035c48b529862296a2b558b3" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::write_header</definition>
        <argsstring>(std::string const &amp;width_height)</argsstring>
        <name>write_header</name>
        <param>
          <type>std::string const &amp;</type>
          <declname>width_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="328" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="328" bodyend="343"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1af2732c88df588aee0fd9539616d4e6b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::add</definition>
        <argsstring>(Geometry const &amp;geometry)</argsstring>
        <name>add</name>
        <param>
          <type>Geometry const &amp;</type>
          <declname>geometry</declname>
        </param>
        <briefdescription>
<para>Adds a geometry to the transformation matrix. After doing this, the specified geometry can be mapped fully into the SVG map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>A model of the specified concept </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="409" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="409" bodyend="419"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1acd0e35eb96b15f426a5b113df53044a9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Geometry</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::map</definition>
        <argsstring>(Geometry const &amp;geometry, std::string const &amp;style, double size=-1.0)</argsstring>
        <name>map</name>
        <param>
          <type>Geometry const &amp;</type>
          <declname>geometry</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>style</declname>
        </param>
        <param>
          <type>double</type>
          <declname>size</declname>
          <defval>-1.0</defval>
        </param>
        <briefdescription>
<para>Maps a geometry into the SVG map using the specified style. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Geometry Concept </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>geometry</parametername>
</parameternamelist>
<parameterdescription>
<para>A model of the specified concept </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>String containing verbatim SVG style information </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional size (used for SVG points) in SVG pixels. For linestrings, specify linewidth in the SVG style information </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="430" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="430" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1aafb090108cae505b432bb64bc3ca1968" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::svg_mapper</definition>
        <argsstring>(std::ostream &amp;stream, SvgCoordinateType width, SvgCoordinateType height, calculation_type scale, std::string const &amp;width_height=&quot;width=\00%\height=\00%\)</argsstring>
        <name>svg_mapper</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>SvgCoordinateType</type>
          <declname>width</declname>
        </param>
        <param>
          <type>SvgCoordinateType</type>
          <declname>height</declname>
        </param>
        <param>
          <type>calculation_type</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
<para>Constructor, initializing the SVG map. Opens and initializes the SVG. Should be called explicitly. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Output stream, should be a stream already open </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the SVG map (in SVG pixels) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the SVG map (in SVG pixels) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>scale</parametername>
</parameternamelist>
<parameterdescription>
<para>Scale factor of the automatically determined bounding box. If the factor is less than 1.0, there will be a margin around the geometries. A factor of 0.95 is often a convenient margin. If the factor is more than 1.0, the SVG map is zoomed and not all geometries will be visible. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional information to increase width and/or height </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="360" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="360" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a4672bb9720fbdccdc15d2b0bd1878f62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::svg_mapper</definition>
        <argsstring>(std::ostream &amp;stream, SvgCoordinateType width, SvgCoordinateType height, std::string const &amp;width_height=&quot;width=\00%\height=\00%\)</argsstring>
        <name>svg_mapper</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>SvgCoordinateType</type>
          <declname>width</declname>
        </param>
        <param>
          <type>SvgCoordinateType</type>
          <declname>height</declname>
        </param>
        <briefdescription>
<para>Constructor, initializing the SVG map. Opens and initializes the SVG. Should be called explicitly. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Output stream, should be a stream already open </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width</parametername>
</parameternamelist>
<parameterdescription>
<para>Width of the SVG map (in SVG pixels) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the SVG map (in SVG pixels) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>width_height</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional information to increase width and/or height </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="382" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="382" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1a6b860b4cc7f5d4a637ad7787cf309c0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename TextPoint</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::text</definition>
        <argsstring>(TextPoint const &amp;point, std::string const &amp;s, std::string const &amp;style, double offset_x=0.0, double offset_y=0.0, double lineheight=10.0)</argsstring>
        <name>text</name>
        <param>
          <type>TextPoint const &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>s</declname>
        </param>
        <param>
          <type>std::string const &amp;</type>
          <declname>style</declname>
        </param>
        <param>
          <type>double</type>
          <declname>offset_x</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>offset_y</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>double</type>
          <declname>lineheight</declname>
          <defval>10.0</defval>
        </param>
        <briefdescription>
<para>Adds a text to the SVG map. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>TextPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>Any type fulfilling a Point Concept </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of the text (in map units) </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>The text itself </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>String containing verbatim SVG style information, of the text </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_x</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset in SVG pixels, defaults to 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset_y</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset in SVG pixels, defaults to 0 </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lineheight</parametername>
</parameternamelist>
<parameterdescription>
<para>Line height in SVG pixels, in case the text contains <linebreak/>
</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="448" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="448" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="classboost_1_1geometry_1_1svg__mapper_1ac0543fa378854571a4c5479ea345eb98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;::~svg_mapper</definition>
        <argsstring>()</argsstring>
        <name>~svg_mapper</name>
        <briefdescription>
<para>Destructor, called automatically. Closes the SVG by streaming &lt;\/svg&gt; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="397" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="397" bodyend="400"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper class to create SVG maps. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Point</parametername>
</parameternamelist>
<parameterdescription>
<para>Point type, for input geometries. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SameScale</parametername>
</parameternamelist>
<parameterdescription>
<para>Boolean flag indicating if horizontal and vertical scale should be the same. The default value is true </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>SvgCoordinateType</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordinate type of SVG points. SVG is capable to use floating point coordinates. Therefore the default value is double</para></parameterdescription>
</parameteritem>
</parameterlist>
 <qbk>[include reference/io/svg.qbk]</qbk>  </para>    </detaileddescription>
    <inheritancegraph>
      <node id="2761">
        <label>boost::noncopyable</label>
      </node>
      <node id="2760">
        <label>boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;</label>
        <link refid="classboost_1_1geometry_1_1svg__mapper"/>
        <childnode refid="2761" relation="private-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2763">
        <label>boost::noncopyable</label>
      </node>
      <node id="2762">
        <label>boost::geometry::svg_mapper&lt; Point, SameScale, SvgCoordinateType &gt;</label>
        <link refid="classboost_1_1geometry_1_1svg__mapper"/>
        <childnode refid="2763" relation="private-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" line="274" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/io/svg/svg_mapper.hpp" bodystart="273" bodyend="486"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1af2732c88df588aee0fd9539616d4e6b3" prot="public" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>add</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a7089f4c9e3b3e34221c03c2b21464f1c" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>calculation_type</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a6ccdcb0df25c6df812f660a3110e00c7" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>init_matrix</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a51204a1a97635d35a6c62982ca27d436" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_bounding_box</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1ae3d295cb2c13dc10212a0d6fd4dc2fd1" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_height</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a6ee55394bfe7620b43c8f7f704b7a7c3" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_matrix</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a8794d86427146dd0e256661c4f19ef94" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_scale</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a20eff16f1ed9e25621d5b1f7610ffc9f" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_stream</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1adc290b7464c8ba29451c94ca7d760a66" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>m_width</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1acd0e35eb96b15f426a5b113df53044a9" prot="public" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>map</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a9bacd10f4556635b566b9cd62af3fd00" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>scale_bounding_box</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1aafb090108cae505b432bb64bc3ca1968" prot="public" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>svg_mapper</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a4672bb9720fbdccdc15d2b0bd1878f62" prot="public" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>svg_mapper</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1afa455a84bf1140e4265705845e27b6d4" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>svg_point_type</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a6b860b4cc7f5d4a637ad7787cf309c0f" prot="public" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>text</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a2433227d6c15d121c002507b62ef6bc3" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>transformer_type</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1a8fe2c193035c48b529862296a2b558b3" prot="private" virt="non-virtual"><scope>boost::geometry::svg_mapper</scope><name>write_header</name></member>
      <member refid="classboost_1_1geometry_1_1svg__mapper_1ac0543fa378854571a4c5479ea345eb98" prot="public" virt="virtual"><scope>boost::geometry::svg_mapper</scope><name>~svg_mapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

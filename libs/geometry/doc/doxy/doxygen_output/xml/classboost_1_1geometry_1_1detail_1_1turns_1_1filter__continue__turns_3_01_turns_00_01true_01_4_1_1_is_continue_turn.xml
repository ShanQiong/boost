<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classboost_1_1geometry_1_1detail_1_1turns_1_1filter__continue__turns_3_01_turns_00_01true_01_4_1_1_is_continue_turn" kind="class" language="C++" prot="private">
    <compoundname>boost::geometry::detail::turns::filter_continue_turns&lt; Turns, true &gt;::IsContinueTurn</compoundname>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1detail_1_1turns_1_1filter__continue__turns_3_01_turns_00_01true_01_4_1_1_is_continue_turn_1aa8b3490cbb884f2e83102751477b94ce" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Operation</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::detail::turns::filter_continue_turns&lt; Turns, true &gt;::IsContinueTurn::is_continue_or_opposite</definition>
        <argsstring>(Operation const &amp;operation) const</argsstring>
        <name>is_continue_or_opposite</name>
        <param>
          <type>Operation const &amp;</type>
          <declname>operation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/turns/filter_continue_turns.hpp" line="39" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/turns/filter_continue_turns.hpp" bodystart="39" bodyend="43"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classboost_1_1geometry_1_1detail_1_1turns_1_1filter__continue__turns_3_01_turns_00_01true_01_4_1_1_is_continue_turn_1a111191193c09cf11651342e596a0e17e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Turn</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool boost::geometry::detail::turns::filter_continue_turns&lt; Turns, true &gt;::IsContinueTurn::operator()</definition>
        <argsstring>(Turn const &amp;turn) const</argsstring>
        <name>operator()</name>
        <param>
          <type>Turn const &amp;</type>
          <declname>turn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/turns/filter_continue_turns.hpp" line="47" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/turns/filter_continue_turns.hpp" bodystart="47" bodyend="57"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/turns/filter_continue_turns.hpp" line="36" column="1" bodyfile="/home/hsb/CProj/Learning/boost/boost_1_79_0/boost/geometry/algorithms/detail/turns/filter_continue_turns.hpp" bodystart="35" bodyend="58"/>
    <listofallmembers>
      <member refid="classboost_1_1geometry_1_1detail_1_1turns_1_1filter__continue__turns_3_01_turns_00_01true_01_4_1_1_is_continue_turn_1aa8b3490cbb884f2e83102751477b94ce" prot="private" virt="non-virtual"><scope>boost::geometry::detail::turns::filter_continue_turns&lt; Turns, true &gt;::IsContinueTurn</scope><name>is_continue_or_opposite</name></member>
      <member refid="classboost_1_1geometry_1_1detail_1_1turns_1_1filter__continue__turns_3_01_turns_00_01true_01_4_1_1_is_continue_turn_1a111191193c09cf11651342e596a0e17e" prot="public" virt="non-virtual"><scope>boost::geometry::detail::turns::filter_continue_turns&lt; Turns, true &gt;::IsContinueTurn</scope><name>operator()</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
